/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainGUI.java
 *
 * Created on 28/01/2012, 01:21:44
 */
package br.ufpb.ed.treeAVL.view;

import javax.swing.JOptionPane;

import br.ufpb.ed.treeAVL.logic.BTNode;
import br.ufpb.ed.treeAVL.logic.ElementNotFoundException;
import br.ufpb.ed.treeAVL.logic.Iterator;
import br.ufpb.ed.treeAVL.logic.NodeBinaryTree;
import br.ufpb.ed.treeAVL.logic.SearchBinaryTree;
import br.ufpb.ed.treeAVL.logic.Tree;

/**
 *
 * @author Junior Bernardo
 */
public class Main extends javax.swing.JFrame {
	
	private SearchBinaryTree<Integer> tree;
    
    private final short INSERT = 1,
                        REMOVE = 2,
                        FIND = 3,
                        detallsEnabled = 1,
                        detallsdesabled = 2;
    
    private short CURRENT_OPTION = -1,
    		      CURRENT_DETALLS = detallsdesabled;    
                        

    /** Creates new form MainGUI */
    public Main() {
        initComponents();                
        tree = new SearchBinaryTree<Integer>(); 
        this.consoleAT.setEditable(false);        
        this.sizeJT.setEditable(false);
        updateVisors(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        PainelTesteArvore = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        consoleAT = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        inputTF = new javax.swing.JTextField();
        OK_JB = new javax.swing.JButton();
        insertRB = new javax.swing.JRadioButton();
        removeRB = new javax.swing.JRadioButton();
        findRB = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ClearJB = new javax.swing.JButton();
        randomTree = new javax.swing.JButton();
        sizeJT = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        DetallsJB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        consoleAT.setColumns(20);
        consoleAT.setRows(5);
        jScrollPane1.setViewportView(consoleAT);

        jLabel1.setText("Console:");

        inputTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTFActionPerformed(evt);
            }
        });

        OK_JB.setText("OK");
        OK_JB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OK_JBActionPerformed(evt);
            }
        });

        buttonGroup1.add(insertRB);
        insertRB.setText("Insert");
        insertRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertRBActionPerformed(evt);
            }
        });

        buttonGroup1.add(removeRB);
        removeRB.setText("Remove");
        removeRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRBActionPerformed(evt);
            }
        });

        buttonGroup1.add(findRB);
        findRB.setText("Find");
        findRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findRBActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("Estrutura de Dados I - Arvore Binária de Busca");

        jLabel3.setText("Input");

        ClearJB.setText("Clear");
        ClearJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearJBActionPerformed(evt);
            }
        });

        randomTree.setText("Random Tree");
        randomTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomTreeActionPerformed(evt);
            }
        });

        sizeJT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeJTActionPerformed(evt);
            }
        });

        jLabel4.setText("Size:");

        DetallsJB.setText("Detalls");
        DetallsJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DetallsJBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelTesteArvoreLayout = new javax.swing.GroupLayout(PainelTesteArvore);
        PainelTesteArvore.setLayout(PainelTesteArvoreLayout);
        PainelTesteArvoreLayout.setHorizontalGroup(
            PainelTesteArvoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelTesteArvoreLayout.createSequentialGroup()
                .addGroup(PainelTesteArvoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelTesteArvoreLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGroup(PainelTesteArvoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PainelTesteArvoreLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(insertRB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeRB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(findRB)
                                .addGap(58, 58, 58))
                            .addGroup(PainelTesteArvoreLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputTF, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(PainelTesteArvoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ClearJB)
                            .addComponent(OK_JB, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)))
                    .addGroup(PainelTesteArvoreLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel2)
                        .addGap(22, 22, 22))
                    .addGroup(PainelTesteArvoreLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(PainelTesteArvoreLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(PainelTesteArvoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PainelTesteArvoreLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sizeJT, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                                .addComponent(DetallsJB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(randomTree, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE))))
                .addContainerGap())
        );

        PainelTesteArvoreLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {findRB, insertRB, removeRB});

        PainelTesteArvoreLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ClearJB, DetallsJB, OK_JB, randomTree});

        PainelTesteArvoreLayout.setVerticalGroup(
            PainelTesteArvoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelTesteArvoreLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelTesteArvoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(OK_JB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelTesteArvoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelTesteArvoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(insertRB)
                        .addComponent(removeRB)
                        .addComponent(findRB))
                    .addComponent(ClearJB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelTesteArvoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(randomTree)
                    .addComponent(jLabel4)
                    .addComponent(sizeJT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DetallsJB))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        PainelTesteArvoreLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ClearJB, OK_JB, inputTF, sizeJT});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PainelTesteArvore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PainelTesteArvore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>


    private void inputTFActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void removeRBActionPerformed(java.awt.event.ActionEvent evt) {                                         
        CURRENT_OPTION = REMOVE;
    }                                        

    private void ClearJBActionPerformed(java.awt.event.ActionEvent evt) {                                        
    	this.tree = new SearchBinaryTree<Integer>();
        updateVisors(false);
    }                                       

    private void insertRBActionPerformed(java.awt.event.ActionEvent evt) {                                         
        CURRENT_OPTION = INSERT;
    }                                        

    private void findRBActionPerformed(java.awt.event.ActionEvent evt) {                                       
        CURRENT_OPTION = FIND;
    }                                      

    private void OK_JBActionPerformed(java.awt.event.ActionEvent evt) {                                      
	    Integer input = null;
		try{
	    	input = Integer.parseInt(inputTF.getText());
	    	inputTF.setText("");
		}catch(NumberFormatException e){    		
			JOptionPane.showMessageDialog(PainelTesteArvore, "Digite uma entrada válida", "Tree", JOptionPane.INFORMATION_MESSAGE);
			return;
		}          	    
	    if(CURRENT_OPTION == -1)
	    	JOptionPane.showMessageDialog(PainelTesteArvore, "Marque uma das opções", "Tree", JOptionPane.INFORMATION_MESSAGE);
	    else{        	
	    	if (CURRENT_OPTION != INSERT && tree.isEmpty()){
	    		JOptionPane.showMessageDialog(PainelTesteArvore, "The tree is empty!", "Tree", JOptionPane.INFORMATION_MESSAGE);
	    		return;
	    	}
	        switch(CURRENT_OPTION){
	        	case INSERT:
	        		tree.insert(input);
	                break;
	            case REMOVE:
				try {
					tree.remove(input);
				} catch (ElementNotFoundException e) {
					JOptionPane.showMessageDialog(PainelTesteArvore, "Element not found!", "Tree", JOptionPane.INFORMATION_MESSAGE);
				}
	                break;
	            case FIND:
	                NodeBinaryTree<Integer> temp = tree.find(input);
	                String left = null, rigth = null, parent = null;
	                if(temp != null){
			            left = (temp.getLeft() == null)? "null" : Integer.toString(temp.getLeft().getElement());
			            rigth = (temp.getRigth() == null)? "null" : Integer.toString(temp.getRigth().getElement());
			            parent = (temp.getParent() == null)? "null" : Integer.toString(temp.getParent().getElement());
	                }	             
	                String msg =  (temp == null)?"Não foram encontrados resultados para sua busca!":
						 "Resultado da busca para '"+input+"':\n\n" + 
						 "BTNode [Element = "+temp.getElement() +
						 ", Left = "+left +
						 ", Rigth = "+rigth +
						 ", Parent = "+ parent+
						 ", Diff = " + temp.getDiff()+
						 ", hegith = " + temp.getHeigth()
						 +"]";
	                consoleAT.setText(ToStringTree(tree) + "\n" + msg);	     	                
	                return;
	        }	       	        	        
	        updateVisors(false);
	    }
    }                                     

    private void randomTreeActionPerformed(java.awt.event.ActionEvent evt) {                                         
    	ClearJBActionPerformed(evt);    	
    	randomInsert(10);    	    	
    	updateVisors(false);
    }                                        

    private void sizeJTActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }
    
    private void DetallsJBActionPerformed(java.awt.event.ActionEvent evt) {
    	CURRENT_DETALLS  = (CURRENT_DETALLS == detallsEnabled)? detallsdesabled: detallsEnabled;
    	boolean temp = (CURRENT_DETALLS == detallsEnabled)? true: false;
    	updateVisors(temp);
    }

     private String ToStringTree(Tree tree){    	
    	 String aux = "";
     	Iterator<BTNode<Integer>> it = tree.iterator();
     	while(it.hasNext())
     		aux += it.next().getElement()+", ";
     	return (!tree.isEmpty())?aux.substring(0, aux.length()-2)+"\n": aux;
    }
     
    private void updateVisors(boolean detallsTree){
    	if (!detallsTree)
    		consoleAT.setText(ToStringTree(tree));
    	else
    		consoleAT.setText("Detalls: \n"+tree.toString());
    	sizeJT.setText(Integer.toString(tree.size()));
    }
    

    private void randomInsert(int end){
    	if(end > 0){
    		int aux = (int)(Math.random()* 100);    		
    		tree.insert(aux);
    		randomInsert(--end);
    	}
    }
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify
    private javax.swing.JButton ClearJB;
    private javax.swing.JButton DetallsJB;
    private javax.swing.JButton OK_JB;
    private javax.swing.JPanel PainelTesteArvore;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextArea consoleAT;
    private javax.swing.JRadioButton findRB;
    private javax.swing.JTextField inputTF;
    private javax.swing.JRadioButton insertRB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton randomTree;
    private javax.swing.JRadioButton removeRB;
    private javax.swing.JTextField sizeJT;
    // End of variables declaration
}
